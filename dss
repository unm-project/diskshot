#!/bin/bash
#######################
##  DISKSHOT Utility ##
#######################

BACKUP_DIR="/var/dss"
sudo mkdir -p "$BACKUP_DIR" || { echo "Error: Failed to create backup directory"; exit 1; }

# ANSI color codes
BOLD='\e[1m'
GREEN='\e[32m'
RED='\e[31m'
RESET='\e[0m'

info() {
    echo -e "${BOLD}${GREEN}=>${RESET} $1"
}
error() {
    echo -e "${BOLD}${RED}=>${RESET} $1"
}
if [ "$UID" = "0" ]; then
    info "Welcome to DISKSHOT"
else
    error "Please run as root"
    exit 1
fi

validate_directory() {
    if [[ ! -d "$1" ]]; then
        error "Error: Source directory '$1' does not exist."
        return 1
    fi
}

check_disk_space() {
    local available_space=$(df "$BACKUP_DIR" | tail -1 | awk '{print $4}')
    if (( available_space < 1024000 )); then  # Check for ~1GB of space
        error "Not enough disk space available for the backup."
        return 1
    fi
}

snap() {
    if [[ -z "$1" || -z "$2" ]]; then
        info "Usage: snap <source_directory> <backup_name>"
        return 1
    fi

    validate_directory "$1" || return 1
    check_disk_space || return 1

    local timestamp=$(date +"%H%M.%d%m%Y")
    local backup_file="$BACKUP_DIR/$2-$timestamp-dss.cpio.zst"

    if find "$1" -depth -print0 | cpio -ocv0 | zstd -o "$backup_file"; then
        info "Snapshot created: $backup_file"
    else
        error "Error creating snapshot."
        return 1
    fi
}

rootsnap() {
    snap "/" "$1"
}
homesnap() {
    snap "$HOME" "$1"
}

restore() {
    local backup_files=("$BACKUP_DIR/$1-dss.cpio.zst")
    
    # Check if any backup files match the pattern
    if compgen -G "${backup_files[0]}" > /dev/null; then
        if [[ ${#backup_files[@]} -gt 1 ]]; then
            echo "Multiple backup files found:"
            for file in "${backup_files[@]}"; do
                echo "  - $(basename "$file")"
            done
            read -p "Enter the exact backup file name to restore: " selected_backup
            backup_file="$BACKUP_DIR/$selected_backup-dss.cpio.zst"
        else
            backup_file="${backup_files[0]}"
        fi
    else
        error "No backup files matching '$1' found."
        return 1
    fi

    local foldertr="$2"

    info "Extracting the Backup"
    if ! sudo zstd -d "$backup_file" -o "$BACKUP_DIR/extract.cpio"; then
        error "Error decompressing the backup file."
        return 1
    fi

    local temp_dir
    temp_dir=$(mktemp -d)
    trap 'rm -rf "$temp_dir"; exit 1' ERR

    if ! sudo cpio -id -D "$temp_dir" < "$BACKUP_DIR/extract.cpio"; then
        error "Error extracting the backup."
        return 1
    fi

    # Move to target directory
    sudo mv "$temp_dir"/* "$foldertr/"
    info "Backup restored to $foldertr"
    sudo rm -rf "$BACKUP_DIR/extract.cpio" "$temp_dir"
}

help() {
    echo "DISKSHOT Utility"
    echo "Take snapshots of the system."
    echo "Version: 0.9"
    echo "Usage: dss <command> <args>"
    echo "Commands:"
    echo "  snap <type> <name>       - Create a backup"
    echo "  restore <file> <folder>  - Restore a backup file"
    echo "Types for snap:"
    echo "  root                      - Backup the root filesystem"
    echo "  home                      - Backup the home directory"
    echo "  <custom>                 - Backup a specified directory"
    echo "DISKSHOT is part of the UNM Suite of Tools."
    echo "Licensed under USLv1"
}

if [[ "$1" == "snap" ]]; then
    case "$2" in
        "root") rootsnap "$3" ;;
        "home") homesnap "$3" ;;
        *) snap "$2" "$3" ;;
    esac
elif [[ "$1" == "help" ]]; then
    help
elif [[ "$1" == "restore" ]]; then
    restore "$2" "$3"
else
    error "Usage: dss <snap|help|restore> <type> <name>"
fi
